apiVersion: batch/v1
kind: Job
metadata:
  name: commandes-seeder
spec:
  template:
    spec:
      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: [
              "/cloud_sql_proxy",
              "-instances=fine-harbor-276700:northamerica-northeast1:postgres-operator-production=tcp:5432",
              # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
              # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
              # "-ip_address_types=PRIVATE",
              "-credential_file=/secrets/cloudsql/serviceaccounttf.json",
            ]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          resources: {}
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: commandes-seeder
          image: us.gcr.io/fine-harbor-276700/patchets/commandes:latest
          command:
            - bash
            - -c
            - rake db:schema:load && rake db:seed
          ports:
            - containerPort: 3000
          resources: {}
          env:
            - name: DISABLE_DATABASE_ENVIRONMENT_CHECK
              value: "1"
          envFrom:
            # Configuration comes from the configmap and the secrets.
            - configMapRef:
                name: commandes-config
            - secretRef:
                name: app-secrets
          imagePullPolicy: Always
      restartPolicy: OnFailure
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      imagePullSecrets:
        - name: gcrcedille-pull
